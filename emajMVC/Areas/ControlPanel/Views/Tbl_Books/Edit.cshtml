@model emajMVC.Models.Tbl_Books

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/ControlPanel/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Tbl_Books</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AuthorID, "AuthorID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("AuthorID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AuthorID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PagesCount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PagesCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PagesCount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Size, "Size", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Size", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fi, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Fi, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Fi, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubjectID, "SubjectID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SubjectID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SubjectID, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.IsTranslated, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsTranslated)
                    @Html.ValidationMessageFor(model => model.IsTranslated, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group" id="DivTranslatorID" style="display:none;">
            @Html.LabelFor(model => model.TranslatorID, "TranslatorID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TranslatorID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TranslatorID, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                </div>
            </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control", @style = "display:none;" } })
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                <input id="fileBook" name="fileBook" type="file" data-max-file-size="1M" />
                <img src="~/DataFiles/@Html.DisplayFor(modelItem => Model.Image)" alt="" id="ImgBook" style="width:100px;" />
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.CoverType, "CoverType", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CoverType", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CoverType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ISBN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReleasedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReleasedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReleasedDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Published, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.circulation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.circulation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.circulation, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {

    <script>
        $(document).ready(function () {

            $("#ReleasedDate").datepicker({
                changeMonth: true,
                changeYear: true
            });
            //$("#PublishedDate").datepicker({
            //    changeMonth: true,
            //    changeYear: true
            //});

            $("#fileBook").change(function () {

                var fileStr = $("#fileBook").val().substring($("#fileBook").val().lastIndexOf('\\') + 1);
                var data = new FormData();
                var files = $("#fileBook").get(0).files;
                // Add the uploaded image content to the form data collection
                if (files.length > 0) {
                    for (var i = 0; i < files.length; i++) {
                        data.append("UploadedImage" + i, files[i]);
                    }
                }
                // Make Ajax request with the contentType = false, and procesDate = false
                var ajaxRequest = $.ajax({
                    type: "POST",
                    url: "../UploadBookImage",
                    contentType: false,
                    processData: false,
                    data: data,
                    success: function (fileName) {
                        $("#ImgBook").attr("src", "../../../DataFiles/" + fileName);
                        $("#Image").attr("value", fileName);
                    },
                    error: function (xhr, status, error) {
                        alert(xhr);
                        alert(status);
                        alert(error);
                    }
                });
            });

            $('#IsTranslated').click(function () {
                if ($('#IsTranslated').is(':checked')) {
                    $('#DivTranslatorID').css('display', 'block');
                }
                else {
                    $('#DivTranslatorID').css('display', 'none');
                }
            });
        });
    </script>

}
